---
# ansible-playbook raspberrypi.yml
- name: Setting up docker, you have to issue the command yourself
  hosts: bender.local
  become: yes # become root?

  vars:
    ansible_user: kevin
    HOME: "/home/{{ ansible_user }}"
    venv: "/home/{{ ansible_user }}/venvs"
    ansible_python_interpreter: /usr/bin/python3
    docker_version: latest
    docker_install_recommends: false
    docker_install_compose: false
    docker_pip_executable: pip3
    docker_users:
      - "{{ ansible_user }}"


  tasks:
    - name: Install packages for docker
      ansible.builtin.apt:
        pkg:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - python3-venv
        - python3-setuptools

    - name: Checkout ultron repo
      ansible.builtin.git:
        repo: git@github.com:walchko/ultron.git
        dest: "{{HOME}}/github/ultron"
      become: false

    - name: Check if Docker is already present.
      command: which docker
      failed_when: false
      changed_when: false
      check_mode: false
      register: docker_command_result

    - name: Download Docker install convenience script.
      get_url:
        url: https://get.docker.com/
        dest: /tmp/get-docker.sh
        mode: 0775
      become: true
      when: docker_command_result.rc == 1

    - name: Run Docker install convenience script.
      command: /tmp/get-docker.sh
      environment:
        CHANNEL: stable
      when: docker_command_result.rc == 1

    - name: fix docker sock permissions
      command: chmod 777 /var/run/docker.sock
      become: true
      when: docker_command_result.rc == 1

    - name: Make sure Docker CE is the version specified.
      apt:
        name: "docker-ce={{ docker_version }}"
        state: present
        force: true
        install_recommends: "{{ docker_install_recommends }}"
      when: docker_version != 'latest'

    - name: Ensure Docker is started.
      service:
        name: docker
        state: started
        enabled: true
      become: true

    - name: "Install docker-compose using pip as {{ ansible_user }}"
      pip:
        name: docker-compose
        state: present
        executable: "{{ docker_pip_executable }}"
      when: docker_install_compose | bool
      become: false

    - name: Ensure docker users are added to the docker group.
      user:
        name: "{{ item }}"
        groups: docker
        append: true
      with_items: "{{ docker_users }}"
      become: true


